package amf.core.client.platform.model

import amf.core.client.platform.model.domain.DomainExtension
import amf.core.internal.convert.CoreClientConverters._
import amf.core.internal.parser.domain.{Annotations => InternalAnnotations}
import org.mulesoft.common.client.lexical.PositionRange

import scala.scalajs.js.annotation.{JSExportAll, JSExportTopLevel}

@JSExportAll
case class Annotations(protected[amf] val _internal: InternalAnnotations) {

  @JSExportTopLevel("Annotations")
  def this() = this(InternalAnnotations())

  def lexical(): PositionRange = _internal.lexical()

  def custom(): ClientList[DomainExtension] = _internal.custom().asClient

  def fragmentName(): ClientOption[String] = _internal.fragmentName().asClient

  def location(): ClientOption[String] = _internal.location().asClient

  def isLocal: Boolean = _internal.isLocal

  def isTrackedBy(trackId: String): Boolean = _internal.isTrackedBy(trackId)

  def isTracked: Boolean = _internal.isTracked

  def resolvedLink: ClientOption[String] = _internal.resolvedLink.asClient

  def resolvedLinkTarget: ClientOption[String] = _internal.resolvedLinkTarget.asClient

  def inheritanceProvenance: ClientOption[String] = _internal.inheritanceProvenance.asClient

  def inlinedElement: Boolean = _internal.inlinedElement

  def autoGeneratedName: Boolean = _internal.autoGeneratedName
}
